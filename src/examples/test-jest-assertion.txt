// PARA primitivos
describe('Primitive values', () => {
  it('should test jest assertion', () => {
    const number = 10;

    expect(number).toBe(10);
    expect(number).toEqual(10);

    expect(number).not.toBeFalsy();

    expect(number).toBeGreaterThan(9);
    expect(number).toBeGreaterThanOrEqual(10);
    expect(number).toBeLessThan(11);
    expect(number).toBeLessThanOrEqual(10);

    expect(number).toBeCloseTo(10.01, 1);
    expect(number).toBeCloseTo(9.996);

    expect(number).toHaveProperty('toString');
  });
});

// Para objectos

describe('Objects', () => {
  it('shuld test jest assertion with objects', () => {
    const person = { name: 'anselmo', age: 10 };
    const anotherPerson = { ...person };

    expect(person).toEqual(anotherPerson);
    expect(person).toHaveProperty('age');
    expect(person).not.toHaveProperty('lastName');
    expect(person).toHaveProperty('age', 10);

    // expect(person.name).toHaveProperty('anselmo');
  });
});
